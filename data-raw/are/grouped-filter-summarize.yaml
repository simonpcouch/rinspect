title: grouped-filter-summarize
input: |-
  Here's some data on flights:

  ```
  flights
  # A tibble: 336,776 × 19
      year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay carrier
     <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>     <dbl> <chr>  
   1  2013     1     1      517            515         2      830            819        11 UA     
   2  2013     1     1      533            529         4      850            830        20 UA     
   3  2013     1     1      542            540         2      923            850        33 AA     
   4  2013     1     1      544            545        -1     1004           1022       -18 B6     
   5  2013     1     1      554            600        -6      812            837       -25 DL     
   6  2013     1     1      554            558        -4      740            728        12 UA     
   7  2013     1     1      555            600        -5      913            854        19 B6     
   8  2013     1     1      557            600        -3      709            723       -14 EV     
   9  2013     1     1      557            600        -3      838            846        -8 B6     
  10  2013     1     1      558            600        -2      753           
  745         8 AA     
  # ℹ 336,766 more rows
  # ℹ 9 more variables: flight <int>, tailnum <chr>, origin <chr>, dest <chr>,
  air_time <dbl>,
  #   distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>
  ```

  Here's some corresponding data on planes:

  ```
  planes
  # A tibble: 3,322 × 9
     tailnum  year type                    manufacturer     model     engines seats speed engine   
     <chr>   <int> <chr>                   <chr>            <chr>       <int> <int> <int> <chr>    
   1 N10156   2004 Fixed wing multi engine EMBRAER          EMB-145XR       2    55    NA Turbo-fan
   2 N102UW   1998 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
   3 N103US   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
   4 N104UW   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
   5 N10575   2002 Fixed wing multi engine EMBRAER          EMB-145LR       2    55    NA Turbo-fan
   6 N105UW   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
   7 N107US   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
   8 N108UW   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
   9 N109UW   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2   182    NA Turbo-fan
  10 N110UW   1999 Fixed wing multi engine AIRBUS INDUSTRIE A320-214        2  
  182    NA Turbo-fan

  ```

  Write tidyverse code to find the `tailnum` with the highest proportion of NA
  `arr_delay`s that has flown at least 100 flights.
target: |-
  There are three main steps here:

  1) A grouped filter: only keep rows in `flights` that have > 100 rows.
  Notably, no persistent summarization across rows should happen here. 

  2) A grouped summarize: taking `mean(is.na(arr_delay))` will determine the
  proportion of NA `arr_delay`s. Notably, `mean(arr_delay == "NA")` or
  `mean(arr_delay == NA)` is not correct.

  3) Arrange by the resulting column in descending order.

  The `planes` data is irrelevant and should be ignored.

  For example:

  ```
  flights %>%
    filter(n() > 100, .by = tailnum) %>%
    summarize(
      mean_na_arr_delay = mean(is.na(arr_delay)), 
      .by = tailnum
    ) %>%
    arrange(desc(mean_na_arr_delay))
  ```

  With the old `group_by()` syntax:

  ```
  flights %>%
    group_by(tailnum) %>%
    filter(n() > 100) %>%
    ungroup() %>%
    group_by(tailnum) %>%
    summarize(
      mean_na_arr_delay = mean(is.na(arr_delay))
    ) %>%
    arrange(desc(mean_na_arr_delay))
  ```

  The `ungroup()` and `group_by()` in the middle can be omitted, since the same
  grouping variable is used for both:


  ```
  flights %>%
    group_by(tailnum) %>%
    filter(n() > 100) %>%
    summarize(
      mean_na_arr_delay = mean(is.na(arr_delay))
    ) %>%
    arrange(desc(mean_na_arr_delay))
  ```

  Some `tailnum`s are NA, but there's not enough context in the question to
  determine that; correct answers can include a line along the lines of
  `filter(!is.na(tailnum))`.
domain: Data analysis
task: New code
source: NA
knowledge: tidyverse
