title: subset-semi-join
input: |-
  I need to subset a dataframe which has common combination of values of a certain select number of columns in another dataframe.

  So lets say:
  ```
  df1<- data.frame(
  key1= c('a', 'b', 'c', 'd'),
  key2=c(1,2,3,4)
  var3=........
  var4=.......
  )

  df2<-data.frame(
  key1= c('a', 'b', 'e', 'f'),
  key2=c(1,2,4,5)
  var3=........
  var4=.......
  )
  ```

  I need only those values observations of `df2` which have common combinations of `key1` and `key2` in `df1`, so like :

  ```
  common_df<-data.frame(
  key1=c('a','b'),
  key2=c(1,2),
  var3=....,
  var4=......
  )
  ```

  How can I do that with the tidyverse?
target: |-
  Use a semi-join with `df1` as the second argument:

  ```
  library(dplyr)

  semi_join(df2, df1, by = join_by(key1, key2))
  #>   key1 key2 var3 var4
  #> 1    a    1    3    4
  #> 2    b    2    3    4
  ```

  Slight differences in syntax are fine; the response may pipe one input rather than providing both to `semi_join()` directly, and the keys can be characters rather than symbols.
domain: Data analysis
task: New code
source: https://forum.posit.co/t/how-to-subset-a-dataframe-based-on-mulitple-key-identifiers-in-another-dataframe/188478/3
knowledge: tidyverse
