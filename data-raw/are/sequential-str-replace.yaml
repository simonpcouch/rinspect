title: sequential-str-replace
input: "I'd like to replace pipes `||` in the `appointment_key` with \"T\" and \"A\".
  Desired outcome is shown in the `result` column:\n\n```\npipe <- tibble::tribble(\n
  \         ~referral_key, ~appointment_key,        ~result,\n            \"OP3349021\",
  \"4289||10410||1\", \"4289T10410A1\",\n            \"OP3359764\", \"4289||10410||2\",
  \"4289T10410A2\"\n          )\npipe\n#> # A tibble: 2 x 3\n#>   referral_key appointment_key
  result      \n#>   <chr>        <chr>           <chr>       \n#> 1 OP3349021    4289||10410||1
  \ 4289T10410A1\n#> 2 OP3359764    4289||10410||2  4289T10410A2\n```\n\nHow can I
  do this with the tidyverse?"
target: "Call `str_replace()` twice, once for the first pair of pipes and once for
  the second:\n\n```\nlibrary(tidyverse)\n\n# replace pipes\npipe <- pipe |> \n  mutate(\n
  \   # first instance of ||\n    appointment_key = str_replace(\n      string = appointment_key,\n
  \     pattern = '\\\\|\\\\|',\n      replacement = 'T'\n    ),\n    # second instance
  of ||\n    appointment_key = str_replace(\n      string = appointment_key,\n      pattern
  = '\\\\|\\\\|',\n      replacement = 'A'\n    ),\n    # optional: test for equivalence\n
  \   equivalent = appointment_key == result\n  )\n```\n\nNotably, `str_replace()`
  should be called twice, in order. The solution should not use `str_replace_all()`.
  Using `||` for the `pattern` is fine as long as `fixed = TRUE`. A correct solution
  can either assign to `appointment_key` or `result`."
domain: Data analysis
task: New code
knowledge:
- base R
- tidyverse
source: https://forum.posit.co/t/replacing-pipes-to-t-and-a/191151/2
